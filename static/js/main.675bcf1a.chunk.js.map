{"version":3,"sources":["components/TodoTextInput.js","components/Header.js","constants/ActionTypes.js","actions/index.js","containers/Header.js","components/Link.js","containers/FilterLink.js","constants/TodoFilters.js","components/Footer.js","components/TodoItem.js","components/TodoList.js","selectors/index.js","containers/VisibleTodoList.js","components/MainSection.js","containers/MainSection.js","components/App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","index.js"],"names":["TodoTextInput","Component","state","text","this","props","handleSubmit","e","target","value","trim","which","onSave","newTodo","setState","handleChange","handleBlur","render","className","classnames","edit","editing","type","placeholder","autoFocus","onBlur","onChange","onKeyDown","Header","addTodo","length","deleteTodo","id","editTodo","completeTodo","completeAllTodos","clearCompleted","setVisibilityFilter","filter","connect","Link","active","children","setFilter","selected","style","cursor","onClick","ownProps","visibilityFilter","dispatch","FILTER_TITLES","Footer","activeCount","completedCount","onClearCompleted","itemWord","Object","keys","map","key","FilterLink","TodoItem","handleDoubleClick","handleSave","todo","element","checked","completed","onDoubleClick","TodoList","filteredTodos","actions","getTodos","todos","getVisibleTodos","createSelector","localStorage","setItem","JSON","stringify","t","Error","getCompletedTodoCount","reduce","count","VisibleTodoList","bindActionCreators","TodoActions","MainSection","todosCount","readOnly","App","initialState","action","rootReducer","combineReducers","maxId","Math","max","areAllMarked","every","store","createStore","reducer","document","getElementById"],"mappings":"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","file":"static/js/main.675bcf1a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport classnames from 'classnames';\r\n\r\nexport default class TodoTextInput extends Component {\r\n  state = {\r\n    text: this.props.text || ''\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    const text = e.target.value.trim()\r\n    if (e.which === 13) {\r\n      this.props.onSave(text)\r\n      if (this.props.newTodo) {\r\n        this.setState({ text: '' })\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ text: e.target.value })\r\n  }\r\n\r\n  handleBlur = e => {\r\n    if (!this.props.newTodo) {\r\n      this.props.onSave(e.target.value)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input className={\r\n        classnames({\r\n          edit: this.props.editing,\r\n          'new-todo': this.props.newTodo\r\n        })}\r\n        type=\"text\"\r\n        placeholder={this.props.placeholder}\r\n        autoFocus={true}\r\n        value={this.state.text}\r\n        onBlur={this.handleBlur}\r\n        onChange={this.handleChange}\r\n        onKeyDown={this.handleSubmit} />\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport TodoTextInput from './TodoTextInput';\r\n\r\nconst Header = ({ addTodo }) => (\r\n  <header className=\"header\">\r\n    <h1>todos</h1>\r\n    <TodoTextInput\r\n      newTodo\r\n      onSave={(text) => {\r\n        if (text.length !== 0) {\r\n          addTodo(text)\r\n        }\r\n      }}\r\n      placeholder=\"What needs to be done?\"\r\n    />\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","export const ADD_TODO = 'ADD_TODO';\r\nexport const DELETE_TODO = 'DELETE_TODO'\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\nexport const COMPLETE_TODO = 'COMPLETE_TODO';\r\nexport const COMPLETE_ALL_TODOS = 'COMPLETE_ALL_TODOS';\r\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED';\r\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER';\r\n","import * as types from '../constants/ActionTypes';\r\n\r\nexport const addTodo = text => ({ type: types.ADD_TODO, text });\r\nexport const deleteTodo = id => ({ type: types.DELETE_TODO, id });\r\nexport const editTodo = (id, text) => ({ type: types.EDIT_TODO, id, text });\r\nexport const completeTodo = id => ({ type: types.COMPLETE_TODO, id });\r\nexport const completeAllTodos = () => ({ type: types.COMPLETE_ALL_TODOS });\r\nexport const clearCompleted = () => ({ type: types.CLEAR_COMPLETED });\r\nexport const setVisibilityFilter = filter => ({ type: types.SET_VISIBILITY_FILTER, filter});\r\n","import { connect } from 'react-redux';\r\nimport Header from '../components/Header';\r\nimport { addTodo } from '../actions';\r\n\r\nexport default connect(null, { addTodo })(Header)\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nconst Link = ({ active, children, setFilter }) =>\r\n  (\r\n    // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n    <a\r\n      className={classnames({ selected: active })}\r\n      style={{ cursor: 'pointer' }}\r\n      onClick={() => setFilter()}\r\n    >\r\n      {children}\r\n    </a>\r\n  );\r\n\r\nexport default Link;\r\n","import { connect } from 'react-redux';\r\nimport { setVisibilityFilter } from '../actions';\r\nimport Link from '../components/Link';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  active: ownProps.filter === state.visibilityFilter\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  setFilter: () => {\r\n    dispatch(setVisibilityFilter(ownProps.filter))\r\n  }\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Link)\r\n","export const SHOW_ALL = 'show_all';\r\nexport const SHOW_ACTIVE = 'show_active';\r\nexport const SHOW_COMPLETED = 'show_completed';\r\n","import React from 'react';\r\nimport FilterLink from '../containers/FilterLink';\r\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../constants/TodoFilters';\r\n\r\nconst FILTER_TITLES = {\r\n  [SHOW_ALL]: 'All',\r\n  [SHOW_ACTIVE]: 'Active',\r\n  [SHOW_COMPLETED]: 'Completed'\r\n};\r\n\r\nconst Footer = (props) => {\r\n  const { activeCount, completedCount, onClearCompleted } = props\r\n  const itemWord = activeCount === 1 ? 'item' : 'items'\r\n  return (\r\n    <footer className=\"footer\">\r\n      <span className=\"todo-count\">\r\n        <strong>{activeCount || 'No'}</strong> {itemWord} left\r\n      </span>\r\n      <ul className=\"filters\">\r\n        {Object.keys(FILTER_TITLES).map(filter =>\r\n          <li key={filter}>\r\n            <FilterLink filter={filter}>\r\n              {FILTER_TITLES[filter]}\r\n            </FilterLink>\r\n          </li>\r\n        )}\r\n      </ul>\r\n      {\r\n        !!completedCount &&\r\n        <button\r\n          className=\"clear-completed\"\r\n          onClick={onClearCompleted}\r\n        >Clear completed</button>\r\n        \r\n      }\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport classnames from 'classnames';\r\nimport TodoTextInput from './TodoTextInput';\r\n\r\nexport default class TodoItem extends Component {\r\n  state = {\r\n    editing: false\r\n  }\r\n\r\n  handleDoubleClick = () => {\r\n    this.setState({ editing: true })\r\n  }\r\n\r\n  handleSave = (id, text) => {\r\n    if (text.length === 0) {\r\n      this.props.deleteTodo(id)\r\n    } else {\r\n      this.props.editTodo(id, text)\r\n    }\r\n    this.setState({ editing: false })\r\n  }\r\n\r\n  render() {\r\n    const { todo, completeTodo, deleteTodo } = this.props\r\n\r\n    let element\r\n    if (this.state.editing) {\r\n      element = (\r\n        <TodoTextInput text={todo.text}\r\n                       editing={this.state.editing}\r\n                       onSave={(text) => this.handleSave(todo.id, text)} />\r\n      )\r\n    } else {\r\n      element = (\r\n        <div className=\"view\">\r\n          <input className=\"toggle\"\r\n                 type=\"checkbox\"\r\n                 checked={todo.completed}\r\n                 onChange={() => completeTodo(todo.id)} />\r\n          <label onDoubleClick={this.handleDoubleClick}>\r\n            {todo.text}\r\n          </label>\r\n          <button className=\"destroy\"\r\n                  onClick={() => deleteTodo(todo.id)} />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <li className={classnames({\r\n        completed: todo.completed,\r\n        editing: this.state.editing\r\n      })}>\r\n        {element}\r\n      </li>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst TodoList = ({ filteredTodos, actions }) => (\r\n  <ul className=\"todo-list\">\r\n    {filteredTodos.map(todo =>\r\n      <TodoItem key={todo.id} todo={todo} {...actions} />\r\n    )}\r\n  </ul>\r\n)\r\n\r\nexport default TodoList;\r\n","import { createSelector } from 'reselect';\r\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../constants/TodoFilters';\r\n\r\nconst getVisibilityFilter = state => state.visibilityFilter;\r\nconst getTodos = state => state.todos;\r\n\r\nexport const getVisibleTodos = createSelector(\r\n  [getVisibilityFilter, getTodos],\r\n  (visibilityFilter, todos) => {\r\n    switch (visibilityFilter) {\r\n      case SHOW_ALL:\r\n        localStorage.setItem('todos', JSON.stringify(todos));\r\n        return todos;\r\n      case SHOW_COMPLETED:\r\n        return todos.filter(t => t.completed)\r\n      case SHOW_ACTIVE:\r\n        return todos.filter(t => !t.completed)\r\n      default:\r\n        throw new Error('Unknown filter: ' + visibilityFilter)\r\n    }\r\n  }\r\n)\r\n\r\nexport const getCompletedTodoCount = createSelector(\r\n  [getTodos],\r\n  todos => (\r\n    todos.reduce((count, todo) =>\r\n      todo.completed ? count + 1 : count,\r\n      0\r\n    )\r\n  )\r\n)","import { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as TodoActions from '../actions';\r\nimport TodoList from '../components/TodoList';\r\nimport { getVisibleTodos } from '../selectors';\r\n\r\nconst mapStateToProps = state => ({\r\n  filteredTodos: getVisibleTodos(state)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators(TodoActions, dispatch)\r\n})\r\n\r\n\r\nconst VisibleTodoList = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoList)\r\n\r\nexport default VisibleTodoList\r\n","import React from 'react';\r\nimport Footer from './Footer';\r\nimport VisibleTodoList from '../containers/VisibleTodoList';\r\n\r\nconst MainSection = ({ todosCount, completedCount, actions }) =>\r\n  (\r\n    <section className=\"main\">\r\n      {\r\n        !!todosCount && \r\n        <span>\r\n          <input\r\n            className=\"toggle-all\"\r\n            type=\"checkbox\"\r\n            checked={completedCount === todosCount}\r\n            readOnly\r\n          />\r\n          <label onClick={actions.completeAllTodos}/>\r\n        </span>\r\n      }\r\n      <VisibleTodoList />\r\n      {\r\n        !!todosCount &&\r\n        <Footer\r\n          completedCount={completedCount}\r\n          activeCount={todosCount - completedCount}\r\n          onClearCompleted={actions.clearCompleted}\r\n        />\r\n      }\r\n    </section>\r\n  );\r\n\r\nexport default MainSection;","import { connect } from 'react-redux';\r\nimport * as TodoActions from '../actions';\r\nimport { bindActionCreators } from 'redux';\r\nimport MainSection from '../components/MainSection';\r\nimport { getCompletedTodoCount } from '../selectors';\r\n\r\nconst mapStateToProps = state => ({\r\n  todosCount: state.todos.length,\r\n  completedCount: getCompletedTodoCount(state)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators(TodoActions, dispatch)\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MainSection)\r\n","import React from 'react';\r\nimport Header from '../containers/Header';\r\nimport MainSection from '../containers/MainSection';\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Header />\r\n    <MainSection />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import {\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  EDIT_TODO,\r\n  COMPLETE_TODO,\r\n  COMPLETE_ALL_TODOS,\r\n  CLEAR_COMPLETED\r\n} from '../constants/ActionTypes';\r\n\r\nconst initialState = [\r\n  {\r\n    id: 0,\r\n    text: 'Task 1',\r\n    completed: false\r\n  }\r\n]\r\n\r\nexport default function todos(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [\r\n        ...state,\r\n        {\r\n          id: state.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1,\r\n          text: action.text,\r\n          completed: false\r\n        }\r\n      ]\r\n\r\n    case DELETE_TODO:\r\n      return state.filter(todo =>\r\n        todo.id !== action.id\r\n      )\r\n\r\n    case EDIT_TODO:\r\n      return state.map(todo =>\r\n        todo.id === action.id ?\r\n          { ...todo, text: action.text } :\r\n          todo\r\n      )\r\n\r\n    case COMPLETE_TODO:\r\n      return state.map(todo =>\r\n        todo.id === action.id ?\r\n          { ...todo, completed: !todo.completed } :\r\n          todo\r\n      )\r\n\r\n    case COMPLETE_ALL_TODOS:\r\n      const areAllMarked = state.every(todo => todo.completed)\r\n      return state.map(todo => ({\r\n        ...todo,\r\n        completed: !areAllMarked\r\n      }))\r\n\r\n    case CLEAR_COMPLETED:\r\n      return state.filter(todo => todo.completed === false)\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { SET_VISIBILITY_FILTER } from '../constants/ActionTypes';\r\nimport { SHOW_ALL } from '../constants/TodoFilters';\r\n\r\nconst visibilityFilter = (state = SHOW_ALL, action) => {\r\n  switch (action.type) {\r\n    case SET_VISIBILITY_FILTER:\r\n      return action.filter\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default visibilityFilter;","import { combineReducers } from 'redux';\r\nimport todos from './todos';\r\nimport visibilityFilter from './visibilityFilter';\r\n\r\nconst rootReducer = combineReducers({\r\n  todos,\r\n  visibilityFilter\r\n})\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport App from './components/App';\r\nimport './components/App.css';\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}